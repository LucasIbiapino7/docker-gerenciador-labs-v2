server {
    listen 80;
    server_name localhost;
    
    # Desabilita gzip globalmente para sub_filter funcionar
    gzip off;
    
    # Servir arquivos estáticos do SPA
    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        
        # Headers para SPA
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Proxy para o discovery endpoint com sub_filter
    location /.well-known/ {
        # Configurações de proxy básicas
        proxy_pass http://authorization-server:9000/.well-known/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CRÍTICO: Desabilitar compressão e buffering
        proxy_set_header Accept-Encoding "";
        proxy_buffering off;
        proxy_cache off;
        
        # Headers que podem interferir no sub_filter
        proxy_hide_header Content-Encoding;
        proxy_hide_header Vary;
        
        # Forçar Content-Type correto
        add_header Content-Type "application/json; charset=utf-8" always;
        
        # Sub_filter configuration
        sub_filter_once off;
        sub_filter_types application/json text/json;
        
        # Múltiplas substituições para garantir
        sub_filter '"issuer":"http://authorization-server:9000"' '"issuer":"http://localhost:9000"';
        sub_filter '"authorization_endpoint":"http://authorization-server:9000' '"authorization_endpoint":"http://localhost:9000';
        sub_filter '"token_endpoint":"http://authorization-server:9000' '"token_endpoint":"http://localhost:9000';
        sub_filter '"userinfo_endpoint":"http://authorization-server:9000' '"userinfo_endpoint":"http://localhost:9000';
        sub_filter '"end_session_endpoint":"http://authorization-server:9000' '"end_session_endpoint":"http://localhost:9000';
        sub_filter '"jwks_uri":"http://authorization-server:9000' '"jwks_uri":"http://localhost:9000';
        sub_filter '"revocation_endpoint":"http://authorization-server:9000' '"revocation_endpoint":"http://localhost:9000';
        sub_filter '"introspection_endpoint":"http://authorization-server:9000' '"introspection_endpoint":"http://localhost:9000';
        
        # Fallback genérico
        sub_filter 'authorization-server:9000' 'localhost:9000';
        
        # CORS headers
        add_header Access-Control-Allow-Origin "http://localhost" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type" always;
        
        # Handle preflight
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "http://localhost";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
    }
    
    # Proxy para outros endpoints do Authorization Server
    location /oauth2/ {
        proxy_pass http://authorization-server:9000/oauth2/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "http://localhost" always;
        add_header Access-Control-Allow-Credentials true always;
    }
    
    # Proxy para login/logout endpoints
    location /login {
        proxy_pass http://authorization-server:9000/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /logout {
        proxy_pass http://authorization-server:9000/logout;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Proxy para API do Resource Server
    location /api/ {
        proxy_pass http://resource-server:8080/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        
        # CORS headers
        add_header Access-Control-Allow-Origin "http://localhost" always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type, X-Requested-With" always;
        
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "http://localhost";
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Accept, Authorization, Content-Type, X-Requested-With";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
    }
}